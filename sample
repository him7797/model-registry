from flask import Flask, render_template,request, jsonify
import mysql.connector
import uuid
import json
from ConfigHandler import ConfigHandler

app = Flask(__name__)


getInfo=ConfigHandler()
getConnectionData=getInfo.getMemesqlConfig()
#print(getConnectionData)
host=getConnectionData['Memsql_Config']['host']
port=getConnectionData['Memsql_Config']['port']
username=getConnectionData['Memsql_Config']['username']
password=getConnectionData['Memsql_Config']['password']
database=getConnectionData['Memsql_Config']['database']
print(host + " "+ port + username + " "+ password + " "+ database)
dbConnection=mysql.connector.connect(user=username, password=password, database=database, host=host, port=port)

@app.route('/uploadmodel', methods=["POST"])


def insertBLOB():
    print (request)
    print (dir(request))
    print("Inserting BLOB into upload table")
    try:
        
        print(request.files)
        
        model=request.files['image']
        print(model)
        modelobj = model.read()
        unique_id = uuid.uuid4()

        cursor = dbConnection.cursor()
        sql_insert_blob_query = """ INSERT INTO model_files
                          (id,model) VALUES (%s,%s)"""

        

        #empPicture = uploadmodel(modelId)
        print(model)
        #Convert data into tuple format
        insert_blob_tuple = ( str(unique_id),modelobj )
        result = cursor.execute(sql_insert_blob_query, insert_blob_tuple)
        dbConnection.commit()
        print("Image and file inserted successfully as a BLOB into upload table", result)

    except mysql.connector.Error as error:
        print("Failed inserting BLOB data into MySQL table {}".format(error))

    finally:
        if dbConnection.is_connected():
            cursor.close()
            dbConnection.close()
            print("MySQL connection is closed")
    return str(unique_id)
  
    


@app.route('/savemodel', methods=['POST'])
def adduser():
    if request.method == 'POST':
        input_body = request.get_json()
        name = input_body['name']
        categoryId = input_body['categoryId']
        description = input_body['description']
        version = input_body['version']
        createdBy = input_body['createdBy']
        modelBasicInfoData = input_body['modelBasicInfoData']
        metricsInfoData = input_body['metricsInfoData']
        parameterInfoData = input_body['parameterInfoData']
        tags = input_body['tags']
        featuresInfoData = input_body['featuresInfoData']
        modelId = input_body['modelId']

        connection = mysql.connector.connect(host='ec2-3-142-69-83.us-east-2.compute.amazonaws.com',
                                             database='sample',
                                             user='root',
                                             password='mavenir')
        mycursor = connection.cursor()
        query = "INSERT INTO models (name, categoryId, description, version, createdBy, modelBasicInfoData, metricsInfoData, parameterInfoData, tags, featuresInfoData, modelId) VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
        val = (name, categoryId, description, version, createdBy, modelBasicInfoData, metricsInfoData, parameterInfoData, tags, featuresInfoData, modelId)
        mycursor.execute(query, val)
        connection.commit()
        return 'result stored'





@app.route('/model', methods=['GET'])
def fetch():
    try:
        getInfo=ConfigHandler()
        getConnectionData=getInfo.getMemesqlConfig()
        print(getConnectionData)
        host=getConnectionData['Memsql_Config']['host']
        port=getConnectionData['Memsql_Config']['port']
        username=getConnectionData['Memsql_Config']['username']
        password=getConnectionData['Memsql_Config']['password']
        database=getConnectionData['Memsql_Config']['database']
        print(host + " "+ port + username + " "+ password + " "+ database)
        dbConnection=mysql.connector.connect(user=username, password=password, database=database, host=host, port=port)
        

        sql_select_Query = "select * from models"
        cursor = dbConnection.cursor()
        cursor.execute(sql_select_Query)
        # get all records
        records = cursor.fetchall()
        print("Total number of rows in table: ", cursor.rowcount)

        print("\nPrinting each row")
        for row in records:
            print("name = ", row[0], )
            print("categoryId = ", row[1])
            print("description  = ", row[2])
            print("version  = ", row[3])
            print("createdBy  = ", row[4])
            print("modelBasicInfoData  = ", row[5])
            print("metricsInfoData  = ", row[6])
            print("parameterInfoData  = ", row[7])
            print("tags  = ", row[8])
            print("featuresInfoData  = ", row[9])
            print("modelId  = ", row[10], "\n")

    except mysql.connector.Error as e:
        print("Error reading data from MySQL table", e)
    finally:
        if dbConnection.is_connected():
            dbConnection.close()
            print("MySQL connection is closed")
    return "result displayed"



@app.route('/model/<id>', methods=['GET'])
def get(id):
    getInfo=ConfigHandler()
    getConnectionData=getInfo.getMemesqlConfig()
    print(getConnectionData)
    host=getConnectionData['Memsql_Config']['host']
        #port=getConnectionData['Memsql_Config']['port']
    username=getConnectionData['Memsql_Config']['username']
    password=getConnectionData['Memsql_Config']['password']
    database=getConnectionData['Memsql_Config']['database']
    print(host + " "+ username + " "+ password + " "+ database)
    dbConnection=mysql.connector.connect(user=username, password=password, database=database, host=host)
    mycursor = dbConnection.cursor()
    print(id)
    mycursor.execute('''select * from models where modelId = %s''', 
                (id,))
    r = [dict((mycursor.description[i][0], value)
         for i, value in enumerate(row)) for row in mycursor.fetchall()]
    return jsonify({'results': r})




@app.route('/model/<id>', methods=['DELETE'])
def delete(id):
    mycursor = dbConnection.cursor()
    print(id)
    mycursor.execute('''DELETE FROM models where modelId = %s''', 
                (id,))
    dbConnection.commit()
    return 'column deleted'

getInfo=ConfigHandler()
getConnectionData=getInfo.getMemesqlConfig()
port=getConnectionData['Memsql_Config']['port']

if __name__ == "__main__":
    app.run(debug=True, port = port)